name: e2e test

on:
  push:
    branches:
      - 'e2e-*'
  pull_request:

jobs:
  install-k8s-vault-external-secrets:
    runs-on: ubuntu-latest
    env:
      "ENV": "test"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Config jq
        uses: sergeysova/jq-action@v2

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Install Helm
        uses: azure/setup-helm@v4
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

      - name: Testing on a k8s Kind Cluster
        uses: helm/kind-action@v1.4.0

      - name: initialize kubectl
        run: |
          kubectl cluster-info
          kubectl get nodes

      - name: Install External Secrets
        run: |
          helm repo add external-secrets https://charts.external-secrets.io
          helm install external-secrets external-secrets/external-secrets

      - name: use helm to install vault
        run: |
          helm repo add hashicorp https://helm.releases.hashicorp.com
          helm install vault hashicorp/vault --set "server.dev.enabled=true"

      - name: wait for external-secrets-controller and vault to be ready
        run: |
          kubectl wait --for=condition=ready pod -l app.kubernetes.io/name=external-secrets --timeout=120s
          kubectl wait --for=condition=ready pod -l app.kubernetes.io/name=external-secrets-webhook --timeout=120s
          kubectl wait --for=condition=ready pod -l app.kubernetes.io/name=external-secrets-cert-controller --timeout=120s
          kubectl wait --for=condition=ready pod -l app.kubernetes.io/name=vault --timeout=120s

      - name: set vault secret key and approle
        run: |
          source e2e/e2e.sh
          init_vault_kv_pair

      - name: install ClusterSecretStore(root, approle)
        run: |
          sed -i 's/{ROLE_ID}/${{ env.ROLE_ID }}/g; s/{SECRET_ID}/${{ env.SECRET_ID }}/g' ./e2e/css_approle1.yaml
          source e2e/e2e.sh     
          install_cluster_secret_store

      - name: install secret to cluster (wait merged by ExternalSecrets)
        run: |
          source e2e/e2e.sh       
          install_secret_to_k8s

      - name: build secret2es
        run: |
          source e2e/e2e.sh     
          build_secret2es

      - name: generate external-secrets and apply to the local k8s
        run: |
          source e2e/e2e.sh          
          generate_external_secret_template
          apply_external_secret_template
          wait_external_secret_template_ready

      - name: get the secret content
        run: |
          source e2e/e2e.sh
          get_secret_content

      - name: keep the k8s secret lifecycle is independent
        run: |
          source e2e/e2e.sh
          keep_secret_lifecycle_independent