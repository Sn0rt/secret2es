name: Release

on:
  push:
    tags:
      - 'v*'
    branches:
      - release/*

env:
  DOCKER_REPO: wangguohao
  IMAGE_NAME: secret2es
  GO_VERSION: '1.22.5'

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Set build time
        run: echo "BUILD_TIME=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_ENV

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.DOCKER_REPO }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=latest,enable=${{ startsWith(github.ref, 'refs/tags/v') }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: ${{ startsWith(github.ref, 'refs/tags/v') }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            VERSION=${{ steps.meta.outputs.version }}
            BUILD_TIME=${{ env.BUILD_TIME }}  

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '${{ env.DOCKER_REPO }}/${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.version }}'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

  release-binaries:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    needs: build-and-push
    strategy:
      matrix:
        include:
          - os: darwin
            arch: arm64
          - os: linux
            arch: arm64
          - os: linux
            arch: amd64
    steps:
      - name: Check out code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Fetch all history for all tags and branches

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Get BINARY_NAME from Makefile
        run: echo "BINARY_NAME=$(make -s print-binary-name)" >> $GITHUB_ENV

      - name: Build binary
        env:
          GOOS: ${{ matrix.os }}
          GOARCH: ${{ matrix.arch }}
        run: |
          make build
          mv ${{ env.BINARY_NAME }} ${{ env.BINARY_NAME }}-${{ matrix.os }}-${{ matrix.arch }}

      - name: Upload binary to release
        uses: svenstaro/upload-release-action@v2
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ env.BINARY_NAME }}-${{ matrix.os }}-${{ matrix.arch }}
          asset_name: ${{ env.BINARY_NAME }}-${{ matrix.os }}-${{ matrix.arch }}
          tag: ${{ github.ref }}
          overwrite: true